// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.SqlQueryParameterEnumMultiple;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlQueryParameterEnum {
    private final @Nullable SqlQueryParameterEnumMultiple multiple;
    private final List<String> options;
    private final @Nullable String value;
    private final @Nullable List<String> values;

    @CustomType.Constructor
    private SqlQueryParameterEnum(
        @CustomType.Parameter("multiple") @Nullable SqlQueryParameterEnumMultiple multiple,
        @CustomType.Parameter("options") List<String> options,
        @CustomType.Parameter("value") @Nullable String value,
        @CustomType.Parameter("values") @Nullable List<String> values) {
        this.multiple = multiple;
        this.options = options;
        this.value = value;
        this.values = values;
    }

    public Optional<SqlQueryParameterEnumMultiple> multiple() {
        return Optional.ofNullable(this.multiple);
    }
    public List<String> options() {
        return this.options;
    }
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlQueryParameterEnum defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable SqlQueryParameterEnumMultiple multiple;
        private List<String> options;
        private @Nullable String value;
        private @Nullable List<String> values;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlQueryParameterEnum defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.multiple = defaults.multiple;
    	      this.options = defaults.options;
    	      this.value = defaults.value;
    	      this.values = defaults.values;
        }

        public Builder multiple(@Nullable SqlQueryParameterEnumMultiple multiple) {
            this.multiple = multiple;
            return this;
        }
        public Builder options(List<String> options) {
            this.options = Objects.requireNonNull(options);
            return this;
        }
        public Builder options(String... options) {
            return options(List.of(options));
        }
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public Builder values(@Nullable List<String> values) {
            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }        public SqlQueryParameterEnum build() {
            return new SqlQueryParameterEnum(multiple, options, value, values);
        }
    }
}
