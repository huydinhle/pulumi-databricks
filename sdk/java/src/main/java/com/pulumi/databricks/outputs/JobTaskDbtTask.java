// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTaskDbtTask {
    private final List<String> commands;
    private final @Nullable String projectDirectory;
    private final @Nullable String schema;

    @CustomType.Constructor
    private JobTaskDbtTask(
        @CustomType.Parameter("commands") List<String> commands,
        @CustomType.Parameter("projectDirectory") @Nullable String projectDirectory,
        @CustomType.Parameter("schema") @Nullable String schema) {
        this.commands = commands;
        this.projectDirectory = projectDirectory;
        this.schema = schema;
    }

    public List<String> commands() {
        return this.commands;
    }
    public Optional<String> projectDirectory() {
        return Optional.ofNullable(this.projectDirectory);
    }
    public Optional<String> schema() {
        return Optional.ofNullable(this.schema);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTaskDbtTask defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> commands;
        private @Nullable String projectDirectory;
        private @Nullable String schema;

        public Builder() {
    	      // Empty
        }

        public Builder(JobTaskDbtTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commands = defaults.commands;
    	      this.projectDirectory = defaults.projectDirectory;
    	      this.schema = defaults.schema;
        }

        public Builder commands(List<String> commands) {
            this.commands = Objects.requireNonNull(commands);
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        public Builder projectDirectory(@Nullable String projectDirectory) {
            this.projectDirectory = projectDirectory;
            return this;
        }
        public Builder schema(@Nullable String schema) {
            this.schema = schema;
            return this;
        }        public JobTaskDbtTask build() {
            return new JobTaskDbtTask(commands, projectDirectory, schema);
        }
    }
}
