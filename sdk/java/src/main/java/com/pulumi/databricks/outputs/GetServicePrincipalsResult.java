// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServicePrincipalsResult {
    /**
     * @return List of `application_ids` of service principals Individual service principal can be retrieved using databricks.ServicePrincipal data source
     * 
     */
    private final List<String> applicationIds;
    private final String displayNameContains;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;

    @CustomType.Constructor
    private GetServicePrincipalsResult(
        @CustomType.Parameter("applicationIds") List<String> applicationIds,
        @CustomType.Parameter("displayNameContains") String displayNameContains,
        @CustomType.Parameter("id") String id) {
        this.applicationIds = applicationIds;
        this.displayNameContains = displayNameContains;
        this.id = id;
    }

    /**
     * @return List of `application_ids` of service principals Individual service principal can be retrieved using databricks.ServicePrincipal data source
     * 
     */
    public List<String> applicationIds() {
        return this.applicationIds;
    }
    public String displayNameContains() {
        return this.displayNameContains;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServicePrincipalsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> applicationIds;
        private String displayNameContains;
        private String id;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServicePrincipalsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationIds = defaults.applicationIds;
    	      this.displayNameContains = defaults.displayNameContains;
    	      this.id = defaults.id;
        }

        public Builder applicationIds(List<String> applicationIds) {
            this.applicationIds = Objects.requireNonNull(applicationIds);
            return this;
        }
        public Builder applicationIds(String... applicationIds) {
            return applicationIds(List.of(applicationIds));
        }
        public Builder displayNameContains(String displayNameContains) {
            this.displayNameContains = Objects.requireNonNull(displayNameContains);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }        public GetServicePrincipalsResult build() {
            return new GetServicePrincipalsResult(applicationIds, displayNameContains, id);
        }
    }
}
