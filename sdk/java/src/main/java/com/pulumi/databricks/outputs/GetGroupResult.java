// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGroupResult {
    /**
     * @return True if group members can create clusters
     * 
     */
    private final @Nullable Boolean allowClusterCreate;
    /**
     * @return True if group members can create instance pools
     * 
     */
    private final @Nullable Boolean allowInstancePoolCreate;
    /**
     * @return Set of databricks.Group identifiers, that can be modified with databricks_group_member resource.
     * 
     */
    private final List<String> childGroups;
    private final @Nullable Boolean databricksSqlAccess;
    private final String displayName;
    /**
     * @return ID of the group in an external identity provider.
     * 
     */
    private final String externalId;
    /**
     * @return Set of group identifiers, that can be modified with databricks_group_member resource.
     * 
     */
    private final List<String> groups;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Set of instance profile ARNs, that can be modified by databricks.GroupInstanceProfile resource.
     * 
     */
    private final List<String> instanceProfiles;
    /**
     * @deprecated
     * Please use `users`, `service_principals`, and `child_groups` instead
     * 
     */
    @Deprecated /* Please use `users`, `service_principals`, and `child_groups` instead */
    private final List<String> members;
    private final @Nullable Boolean recursive;
    /**
     * @return Set of databricks.ServicePrincipal identifiers, that can be modified with databricks_group_member resource.
     * 
     */
    private final List<String> servicePrincipals;
    /**
     * @return Set of databricks.User identifiers, that can be modified with databricks_group_member resource.
     * 
     */
    private final List<String> users;
    private final @Nullable Boolean workspaceAccess;

    @CustomType.Constructor
    private GetGroupResult(
        @CustomType.Parameter("allowClusterCreate") @Nullable Boolean allowClusterCreate,
        @CustomType.Parameter("allowInstancePoolCreate") @Nullable Boolean allowInstancePoolCreate,
        @CustomType.Parameter("childGroups") List<String> childGroups,
        @CustomType.Parameter("databricksSqlAccess") @Nullable Boolean databricksSqlAccess,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("externalId") String externalId,
        @CustomType.Parameter("groups") List<String> groups,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceProfiles") List<String> instanceProfiles,
        @CustomType.Parameter("members") List<String> members,
        @CustomType.Parameter("recursive") @Nullable Boolean recursive,
        @CustomType.Parameter("servicePrincipals") List<String> servicePrincipals,
        @CustomType.Parameter("users") List<String> users,
        @CustomType.Parameter("workspaceAccess") @Nullable Boolean workspaceAccess) {
        this.allowClusterCreate = allowClusterCreate;
        this.allowInstancePoolCreate = allowInstancePoolCreate;
        this.childGroups = childGroups;
        this.databricksSqlAccess = databricksSqlAccess;
        this.displayName = displayName;
        this.externalId = externalId;
        this.groups = groups;
        this.id = id;
        this.instanceProfiles = instanceProfiles;
        this.members = members;
        this.recursive = recursive;
        this.servicePrincipals = servicePrincipals;
        this.users = users;
        this.workspaceAccess = workspaceAccess;
    }

    /**
     * @return True if group members can create clusters
     * 
     */
    public Optional<Boolean> allowClusterCreate() {
        return Optional.ofNullable(this.allowClusterCreate);
    }
    /**
     * @return True if group members can create instance pools
     * 
     */
    public Optional<Boolean> allowInstancePoolCreate() {
        return Optional.ofNullable(this.allowInstancePoolCreate);
    }
    /**
     * @return Set of databricks.Group identifiers, that can be modified with databricks_group_member resource.
     * 
     */
    public List<String> childGroups() {
        return this.childGroups;
    }
    public Optional<Boolean> databricksSqlAccess() {
        return Optional.ofNullable(this.databricksSqlAccess);
    }
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return ID of the group in an external identity provider.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return Set of group identifiers, that can be modified with databricks_group_member resource.
     * 
     */
    public List<String> groups() {
        return this.groups;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Set of instance profile ARNs, that can be modified by databricks.GroupInstanceProfile resource.
     * 
     */
    public List<String> instanceProfiles() {
        return this.instanceProfiles;
    }
    /**
     * @deprecated
     * Please use `users`, `service_principals`, and `child_groups` instead
     * 
     */
    @Deprecated /* Please use `users`, `service_principals`, and `child_groups` instead */
    public List<String> members() {
        return this.members;
    }
    public Optional<Boolean> recursive() {
        return Optional.ofNullable(this.recursive);
    }
    /**
     * @return Set of databricks.ServicePrincipal identifiers, that can be modified with databricks_group_member resource.
     * 
     */
    public List<String> servicePrincipals() {
        return this.servicePrincipals;
    }
    /**
     * @return Set of databricks.User identifiers, that can be modified with databricks_group_member resource.
     * 
     */
    public List<String> users() {
        return this.users;
    }
    public Optional<Boolean> workspaceAccess() {
        return Optional.ofNullable(this.workspaceAccess);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowClusterCreate;
        private @Nullable Boolean allowInstancePoolCreate;
        private List<String> childGroups;
        private @Nullable Boolean databricksSqlAccess;
        private String displayName;
        private String externalId;
        private List<String> groups;
        private String id;
        private List<String> instanceProfiles;
        private List<String> members;
        private @Nullable Boolean recursive;
        private List<String> servicePrincipals;
        private List<String> users;
        private @Nullable Boolean workspaceAccess;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowClusterCreate = defaults.allowClusterCreate;
    	      this.allowInstancePoolCreate = defaults.allowInstancePoolCreate;
    	      this.childGroups = defaults.childGroups;
    	      this.databricksSqlAccess = defaults.databricksSqlAccess;
    	      this.displayName = defaults.displayName;
    	      this.externalId = defaults.externalId;
    	      this.groups = defaults.groups;
    	      this.id = defaults.id;
    	      this.instanceProfiles = defaults.instanceProfiles;
    	      this.members = defaults.members;
    	      this.recursive = defaults.recursive;
    	      this.servicePrincipals = defaults.servicePrincipals;
    	      this.users = defaults.users;
    	      this.workspaceAccess = defaults.workspaceAccess;
        }

        public Builder allowClusterCreate(@Nullable Boolean allowClusterCreate) {
            this.allowClusterCreate = allowClusterCreate;
            return this;
        }
        public Builder allowInstancePoolCreate(@Nullable Boolean allowInstancePoolCreate) {
            this.allowInstancePoolCreate = allowInstancePoolCreate;
            return this;
        }
        public Builder childGroups(List<String> childGroups) {
            this.childGroups = Objects.requireNonNull(childGroups);
            return this;
        }
        public Builder childGroups(String... childGroups) {
            return childGroups(List.of(childGroups));
        }
        public Builder databricksSqlAccess(@Nullable Boolean databricksSqlAccess) {
            this.databricksSqlAccess = databricksSqlAccess;
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder externalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }
        public Builder groups(List<String> groups) {
            this.groups = Objects.requireNonNull(groups);
            return this;
        }
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceProfiles(List<String> instanceProfiles) {
            this.instanceProfiles = Objects.requireNonNull(instanceProfiles);
            return this;
        }
        public Builder instanceProfiles(String... instanceProfiles) {
            return instanceProfiles(List.of(instanceProfiles));
        }
        public Builder members(List<String> members) {
            this.members = Objects.requireNonNull(members);
            return this;
        }
        public Builder members(String... members) {
            return members(List.of(members));
        }
        public Builder recursive(@Nullable Boolean recursive) {
            this.recursive = recursive;
            return this;
        }
        public Builder servicePrincipals(List<String> servicePrincipals) {
            this.servicePrincipals = Objects.requireNonNull(servicePrincipals);
            return this;
        }
        public Builder servicePrincipals(String... servicePrincipals) {
            return servicePrincipals(List.of(servicePrincipals));
        }
        public Builder users(List<String> users) {
            this.users = Objects.requireNonNull(users);
            return this;
        }
        public Builder users(String... users) {
            return users(List.of(users));
        }
        public Builder workspaceAccess(@Nullable Boolean workspaceAccess) {
            this.workspaceAccess = workspaceAccess;
            return this;
        }        public GetGroupResult build() {
            return new GetGroupResult(allowClusterCreate, allowInstancePoolCreate, childGroups, databricksSqlAccess, displayName, externalId, groups, id, instanceProfiles, members, recursive, servicePrincipals, users, workspaceAccess);
        }
    }
}
