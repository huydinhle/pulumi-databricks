// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MlflowWebhookHttpUrlSpec {
    /**
     * @return Value of the authorization header that should be sent in the request sent by the wehbook.  It should be of the form `&lt;auth type&gt; &lt;credentials&gt;`, e.g. `Bearer &lt;access_token&gt;`. If set to an empty string, no authorization header will be included in the request.
     * 
     */
    private final @Nullable String authorization;
    /**
     * @return Enable/disable SSL certificate validation. Default is `true`. For self-signed certificates, this field must be `false` AND the destination server must disable certificate validation as well. For security purposes, it is encouraged to perform secret validation with the HMAC-encoded portion of the payload and acknowledge the risk associated with disabling hostname validation whereby it becomes more likely that requests can be maliciously routed to an unintended host.
     * 
     */
    private final @Nullable Boolean enableSslVerification;
    private final @Nullable String string;
    /**
     * @return External HTTPS URL called on event trigger (by using a POST request). Structure of payload depends on the event type, refer to [documentation](https://docs.databricks.com/applications/mlflow/model-registry-webhooks.html) for more details.
     * 
     */
    private final String url;

    @CustomType.Constructor
    private MlflowWebhookHttpUrlSpec(
        @CustomType.Parameter("authorization") @Nullable String authorization,
        @CustomType.Parameter("enableSslVerification") @Nullable Boolean enableSslVerification,
        @CustomType.Parameter("string") @Nullable String string,
        @CustomType.Parameter("url") String url) {
        this.authorization = authorization;
        this.enableSslVerification = enableSslVerification;
        this.string = string;
        this.url = url;
    }

    /**
     * @return Value of the authorization header that should be sent in the request sent by the wehbook.  It should be of the form `&lt;auth type&gt; &lt;credentials&gt;`, e.g. `Bearer &lt;access_token&gt;`. If set to an empty string, no authorization header will be included in the request.
     * 
     */
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return Enable/disable SSL certificate validation. Default is `true`. For self-signed certificates, this field must be `false` AND the destination server must disable certificate validation as well. For security purposes, it is encouraged to perform secret validation with the HMAC-encoded portion of the payload and acknowledge the risk associated with disabling hostname validation whereby it becomes more likely that requests can be maliciously routed to an unintended host.
     * 
     */
    public Optional<Boolean> enableSslVerification() {
        return Optional.ofNullable(this.enableSslVerification);
    }
    public Optional<String> string() {
        return Optional.ofNullable(this.string);
    }
    /**
     * @return External HTTPS URL called on event trigger (by using a POST request). Structure of payload depends on the event type, refer to [documentation](https://docs.databricks.com/applications/mlflow/model-registry-webhooks.html) for more details.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MlflowWebhookHttpUrlSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authorization;
        private @Nullable Boolean enableSslVerification;
        private @Nullable String string;
        private String url;

        public Builder() {
    	      // Empty
        }

        public Builder(MlflowWebhookHttpUrlSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorization = defaults.authorization;
    	      this.enableSslVerification = defaults.enableSslVerification;
    	      this.string = defaults.string;
    	      this.url = defaults.url;
        }

        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        public Builder enableSslVerification(@Nullable Boolean enableSslVerification) {
            this.enableSslVerification = enableSslVerification;
            return this;
        }
        public Builder string(@Nullable String string) {
            this.string = string;
            return this;
        }
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }        public MlflowWebhookHttpUrlSpec build() {
            return new MlflowWebhookHttpUrlSpec(authorization, enableSslVerification, string, url);
        }
    }
}
