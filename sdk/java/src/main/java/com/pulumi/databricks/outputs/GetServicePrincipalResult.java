// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServicePrincipalResult {
    /**
     * @return Whether service principal is active or not.
     * 
     */
    private final Boolean active;
    private final String applicationId;
    /**
     * @return Display name of the service principal, e.g. `Foo SPN`.
     * 
     */
    private final String displayName;
    /**
     * @return ID of the service principal in an external identity provider.
     * 
     */
    private final String externalId;
    /**
     * @return Home folder of the service principal, e.g. `/Users/11111111-2222-3333-4444-555666777888`.
     * 
     */
    private final String home;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Repos location of the service principal, e.g. `/Repos/11111111-2222-3333-4444-555666777888`.
     * 
     */
    private final String repos;
    /**
     * @return The id of the service principal.
     * 
     */
    private final String spId;

    @CustomType.Constructor
    private GetServicePrincipalResult(
        @CustomType.Parameter("active") Boolean active,
        @CustomType.Parameter("applicationId") String applicationId,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("externalId") String externalId,
        @CustomType.Parameter("home") String home,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("repos") String repos,
        @CustomType.Parameter("spId") String spId) {
        this.active = active;
        this.applicationId = applicationId;
        this.displayName = displayName;
        this.externalId = externalId;
        this.home = home;
        this.id = id;
        this.repos = repos;
        this.spId = spId;
    }

    /**
     * @return Whether service principal is active or not.
     * 
     */
    public Boolean active() {
        return this.active;
    }
    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return Display name of the service principal, e.g. `Foo SPN`.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return ID of the service principal in an external identity provider.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return Home folder of the service principal, e.g. `/Users/11111111-2222-3333-4444-555666777888`.
     * 
     */
    public String home() {
        return this.home;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Repos location of the service principal, e.g. `/Repos/11111111-2222-3333-4444-555666777888`.
     * 
     */
    public String repos() {
        return this.repos;
    }
    /**
     * @return The id of the service principal.
     * 
     */
    public String spId() {
        return this.spId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServicePrincipalResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean active;
        private String applicationId;
        private String displayName;
        private String externalId;
        private String home;
        private String id;
        private String repos;
        private String spId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServicePrincipalResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.applicationId = defaults.applicationId;
    	      this.displayName = defaults.displayName;
    	      this.externalId = defaults.externalId;
    	      this.home = defaults.home;
    	      this.id = defaults.id;
    	      this.repos = defaults.repos;
    	      this.spId = defaults.spId;
        }

        public Builder active(Boolean active) {
            this.active = Objects.requireNonNull(active);
            return this;
        }
        public Builder applicationId(String applicationId) {
            this.applicationId = Objects.requireNonNull(applicationId);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder externalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }
        public Builder home(String home) {
            this.home = Objects.requireNonNull(home);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder repos(String repos) {
            this.repos = Objects.requireNonNull(repos);
            return this;
        }
        public Builder spId(String spId) {
            this.spId = Objects.requireNonNull(spId);
            return this;
        }        public GetServicePrincipalResult build() {
            return new GetServicePrincipalResult(active, applicationId, displayName, externalId, home, id, repos, spId);
        }
    }
}
