// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class SqlPermissionsPrivilegeAssignment {
    /**
     * @return `display_name` for a databricks.Group or databricks_user, `application_id` for a databricks_service_principal.
     * 
     */
    private final String principal;
    /**
     * @return set of available privilege names in upper case.
     * 
     */
    private final List<String> privileges;

    @CustomType.Constructor
    private SqlPermissionsPrivilegeAssignment(
        @CustomType.Parameter("principal") String principal,
        @CustomType.Parameter("privileges") List<String> privileges) {
        this.principal = principal;
        this.privileges = privileges;
    }

    /**
     * @return `display_name` for a databricks.Group or databricks_user, `application_id` for a databricks_service_principal.
     * 
     */
    public String principal() {
        return this.principal;
    }
    /**
     * @return set of available privilege names in upper case.
     * 
     */
    public List<String> privileges() {
        return this.privileges;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlPermissionsPrivilegeAssignment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String principal;
        private List<String> privileges;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlPermissionsPrivilegeAssignment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.principal = defaults.principal;
    	      this.privileges = defaults.privileges;
        }

        public Builder principal(String principal) {
            this.principal = Objects.requireNonNull(principal);
            return this;
        }
        public Builder privileges(List<String> privileges) {
            this.privileges = Objects.requireNonNull(privileges);
            return this;
        }
        public Builder privileges(String... privileges) {
            return privileges(List.of(privileges));
        }        public SqlPermissionsPrivilegeAssignment build() {
            return new SqlPermissionsPrivilegeAssignment(principal, privileges);
        }
    }
}
