// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.SqlQueryParameterQueryMultiple;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlQueryParameterQuery {
    private final @Nullable SqlQueryParameterQueryMultiple multiple;
    private final String queryId;
    private final @Nullable String value;
    private final @Nullable List<String> values;

    @CustomType.Constructor
    private SqlQueryParameterQuery(
        @CustomType.Parameter("multiple") @Nullable SqlQueryParameterQueryMultiple multiple,
        @CustomType.Parameter("queryId") String queryId,
        @CustomType.Parameter("value") @Nullable String value,
        @CustomType.Parameter("values") @Nullable List<String> values) {
        this.multiple = multiple;
        this.queryId = queryId;
        this.value = value;
        this.values = values;
    }

    public Optional<SqlQueryParameterQueryMultiple> multiple() {
        return Optional.ofNullable(this.multiple);
    }
    public String queryId() {
        return this.queryId;
    }
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlQueryParameterQuery defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable SqlQueryParameterQueryMultiple multiple;
        private String queryId;
        private @Nullable String value;
        private @Nullable List<String> values;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlQueryParameterQuery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.multiple = defaults.multiple;
    	      this.queryId = defaults.queryId;
    	      this.value = defaults.value;
    	      this.values = defaults.values;
        }

        public Builder multiple(@Nullable SqlQueryParameterQueryMultiple multiple) {
            this.multiple = multiple;
            return this;
        }
        public Builder queryId(String queryId) {
            this.queryId = Objects.requireNonNull(queryId);
            return this;
        }
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public Builder values(@Nullable List<String> values) {
            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }        public SqlQueryParameterQuery build() {
            return new SqlQueryParameterQuery(multiple, queryId, value, values);
        }
    }
}
