// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class MwsCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MwsCredentialsArgs Empty = new MwsCredentialsArgs();

    /**
     * Account Id that could be found in the bottom left corner of [Accounts Console](https://accounts.cloud.databricks.com/)
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return Account Id that could be found in the bottom left corner of [Accounts Console](https://accounts.cloud.databricks.com/)
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * name of credentials to register
     * 
     */
    @Import(name="credentialsName", required=true)
    private Output<String> credentialsName;

    /**
     * @return name of credentials to register
     * 
     */
    public Output<String> credentialsName() {
        return this.credentialsName;
    }

    /**
     * ARN of cross-account role
     * 
     */
    @Import(name="roleArn", required=true)
    private Output<String> roleArn;

    /**
     * @return ARN of cross-account role
     * 
     */
    public Output<String> roleArn() {
        return this.roleArn;
    }

    private MwsCredentialsArgs() {}

    private MwsCredentialsArgs(MwsCredentialsArgs $) {
        this.accountId = $.accountId;
        this.credentialsName = $.credentialsName;
        this.roleArn = $.roleArn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MwsCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MwsCredentialsArgs $;

        public Builder() {
            $ = new MwsCredentialsArgs();
        }

        public Builder(MwsCredentialsArgs defaults) {
            $ = new MwsCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Account Id that could be found in the bottom left corner of [Accounts Console](https://accounts.cloud.databricks.com/)
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Account Id that could be found in the bottom left corner of [Accounts Console](https://accounts.cloud.databricks.com/)
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param credentialsName name of credentials to register
         * 
         * @return builder
         * 
         */
        public Builder credentialsName(Output<String> credentialsName) {
            $.credentialsName = credentialsName;
            return this;
        }

        /**
         * @param credentialsName name of credentials to register
         * 
         * @return builder
         * 
         */
        public Builder credentialsName(String credentialsName) {
            return credentialsName(Output.of(credentialsName));
        }

        /**
         * @param roleArn ARN of cross-account role
         * 
         * @return builder
         * 
         */
        public Builder roleArn(Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn ARN of cross-account role
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public MwsCredentialsArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.credentialsName = Objects.requireNonNull($.credentialsName, "expected parameter 'credentialsName' to be non-null");
            $.roleArn = Objects.requireNonNull($.roleArn, "expected parameter 'roleArn' to be non-null");
            return $;
        }
    }

}
