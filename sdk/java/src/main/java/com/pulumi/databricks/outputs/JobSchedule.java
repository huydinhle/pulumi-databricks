// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobSchedule {
    /**
     * @return Indicate whether this schedule is paused or not. Either “PAUSED” or “UNPAUSED”. When the pause_status field is omitted and a schedule is provided, the server will default to using &#34;UNPAUSED&#34; as a value for pause_status.
     * 
     */
    private final @Nullable String pauseStatus;
    /**
     * @return A [Cron expression using Quartz syntax](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) that describes the schedule for a job. This field is required.
     * 
     */
    private final String quartzCronExpression;
    /**
     * @return A Java timezone ID. The schedule for a job will be resolved with respect to this timezone. See Java TimeZone for details. This field is required.
     * 
     */
    private final String timezoneId;

    @CustomType.Constructor
    private JobSchedule(
        @CustomType.Parameter("pauseStatus") @Nullable String pauseStatus,
        @CustomType.Parameter("quartzCronExpression") String quartzCronExpression,
        @CustomType.Parameter("timezoneId") String timezoneId) {
        this.pauseStatus = pauseStatus;
        this.quartzCronExpression = quartzCronExpression;
        this.timezoneId = timezoneId;
    }

    /**
     * @return Indicate whether this schedule is paused or not. Either “PAUSED” or “UNPAUSED”. When the pause_status field is omitted and a schedule is provided, the server will default to using &#34;UNPAUSED&#34; as a value for pause_status.
     * 
     */
    public Optional<String> pauseStatus() {
        return Optional.ofNullable(this.pauseStatus);
    }
    /**
     * @return A [Cron expression using Quartz syntax](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) that describes the schedule for a job. This field is required.
     * 
     */
    public String quartzCronExpression() {
        return this.quartzCronExpression;
    }
    /**
     * @return A Java timezone ID. The schedule for a job will be resolved with respect to this timezone. See Java TimeZone for details. This field is required.
     * 
     */
    public String timezoneId() {
        return this.timezoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobSchedule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String pauseStatus;
        private String quartzCronExpression;
        private String timezoneId;

        public Builder() {
    	      // Empty
        }

        public Builder(JobSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pauseStatus = defaults.pauseStatus;
    	      this.quartzCronExpression = defaults.quartzCronExpression;
    	      this.timezoneId = defaults.timezoneId;
        }

        public Builder pauseStatus(@Nullable String pauseStatus) {
            this.pauseStatus = pauseStatus;
            return this;
        }
        public Builder quartzCronExpression(String quartzCronExpression) {
            this.quartzCronExpression = Objects.requireNonNull(quartzCronExpression);
            return this;
        }
        public Builder timezoneId(String timezoneId) {
            this.timezoneId = Objects.requireNonNull(timezoneId);
            return this;
        }        public JobSchedule build() {
            return new JobSchedule(pauseStatus, quartzCronExpression, timezoneId);
        }
    }
}
