// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlQueryScheduleWeekly {
    private final String dayOfWeek;
    private final Integer intervalWeeks;
    private final String timeOfDay;
    private final @Nullable String untilDate;

    @CustomType.Constructor
    private SqlQueryScheduleWeekly(
        @CustomType.Parameter("dayOfWeek") String dayOfWeek,
        @CustomType.Parameter("intervalWeeks") Integer intervalWeeks,
        @CustomType.Parameter("timeOfDay") String timeOfDay,
        @CustomType.Parameter("untilDate") @Nullable String untilDate) {
        this.dayOfWeek = dayOfWeek;
        this.intervalWeeks = intervalWeeks;
        this.timeOfDay = timeOfDay;
        this.untilDate = untilDate;
    }

    public String dayOfWeek() {
        return this.dayOfWeek;
    }
    public Integer intervalWeeks() {
        return this.intervalWeeks;
    }
    public String timeOfDay() {
        return this.timeOfDay;
    }
    public Optional<String> untilDate() {
        return Optional.ofNullable(this.untilDate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlQueryScheduleWeekly defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dayOfWeek;
        private Integer intervalWeeks;
        private String timeOfDay;
        private @Nullable String untilDate;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlQueryScheduleWeekly defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.intervalWeeks = defaults.intervalWeeks;
    	      this.timeOfDay = defaults.timeOfDay;
    	      this.untilDate = defaults.untilDate;
        }

        public Builder dayOfWeek(String dayOfWeek) {
            this.dayOfWeek = Objects.requireNonNull(dayOfWeek);
            return this;
        }
        public Builder intervalWeeks(Integer intervalWeeks) {
            this.intervalWeeks = Objects.requireNonNull(intervalWeeks);
            return this;
        }
        public Builder timeOfDay(String timeOfDay) {
            this.timeOfDay = Objects.requireNonNull(timeOfDay);
            return this;
        }
        public Builder untilDate(@Nullable String untilDate) {
            this.untilDate = untilDate;
            return this;
        }        public SqlQueryScheduleWeekly build() {
            return new SqlQueryScheduleWeekly(dayOfWeek, intervalWeeks, timeOfDay, untilDate);
        }
    }
}
