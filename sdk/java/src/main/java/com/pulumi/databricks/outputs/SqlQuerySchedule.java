// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.SqlQueryScheduleContinuous;
import com.pulumi.databricks.outputs.SqlQueryScheduleDaily;
import com.pulumi.databricks.outputs.SqlQueryScheduleWeekly;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlQuerySchedule {
    private final @Nullable SqlQueryScheduleContinuous continuous;
    private final @Nullable SqlQueryScheduleDaily daily;
    private final @Nullable SqlQueryScheduleWeekly weekly;

    @CustomType.Constructor
    private SqlQuerySchedule(
        @CustomType.Parameter("continuous") @Nullable SqlQueryScheduleContinuous continuous,
        @CustomType.Parameter("daily") @Nullable SqlQueryScheduleDaily daily,
        @CustomType.Parameter("weekly") @Nullable SqlQueryScheduleWeekly weekly) {
        this.continuous = continuous;
        this.daily = daily;
        this.weekly = weekly;
    }

    public Optional<SqlQueryScheduleContinuous> continuous() {
        return Optional.ofNullable(this.continuous);
    }
    public Optional<SqlQueryScheduleDaily> daily() {
        return Optional.ofNullable(this.daily);
    }
    public Optional<SqlQueryScheduleWeekly> weekly() {
        return Optional.ofNullable(this.weekly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlQuerySchedule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable SqlQueryScheduleContinuous continuous;
        private @Nullable SqlQueryScheduleDaily daily;
        private @Nullable SqlQueryScheduleWeekly weekly;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlQuerySchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.continuous = defaults.continuous;
    	      this.daily = defaults.daily;
    	      this.weekly = defaults.weekly;
        }

        public Builder continuous(@Nullable SqlQueryScheduleContinuous continuous) {
            this.continuous = continuous;
            return this;
        }
        public Builder daily(@Nullable SqlQueryScheduleDaily daily) {
            this.daily = daily;
            return this;
        }
        public Builder weekly(@Nullable SqlQueryScheduleWeekly weekly) {
            this.weekly = weekly;
            return this;
        }        public SqlQuerySchedule build() {
            return new SqlQuerySchedule(continuous, daily, weekly);
        }
    }
}
