// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.databricks.outputs.ClusterClusterLogConfDbfs;
import com.pulumi.databricks.outputs.ClusterClusterLogConfS3;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterClusterLogConf {
    private final @Nullable ClusterClusterLogConfDbfs dbfs;
    private final @Nullable ClusterClusterLogConfS3 s3;

    @CustomType.Constructor
    private ClusterClusterLogConf(
        @CustomType.Parameter("dbfs") @Nullable ClusterClusterLogConfDbfs dbfs,
        @CustomType.Parameter("s3") @Nullable ClusterClusterLogConfS3 s3) {
        this.dbfs = dbfs;
        this.s3 = s3;
    }

    public Optional<ClusterClusterLogConfDbfs> dbfs() {
        return Optional.ofNullable(this.dbfs);
    }
    public Optional<ClusterClusterLogConfS3> s3() {
        return Optional.ofNullable(this.s3);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterClusterLogConf defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ClusterClusterLogConfDbfs dbfs;
        private @Nullable ClusterClusterLogConfS3 s3;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterClusterLogConf defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbfs = defaults.dbfs;
    	      this.s3 = defaults.s3;
        }

        public Builder dbfs(@Nullable ClusterClusterLogConfDbfs dbfs) {
            this.dbfs = dbfs;
            return this;
        }
        public Builder s3(@Nullable ClusterClusterLogConfS3 s3) {
            this.s3 = s3;
            return this;
        }        public ClusterClusterLogConf build() {
            return new ClusterClusterLogConf(dbfs, s3);
        }
    }
}
